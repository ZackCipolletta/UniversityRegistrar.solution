@{
  Layout = "_Layout";
}

@using UniversityRegistrar.Models
@model UniversityRegistrar.Models.Department

<h2>Department Details</h2>
<hr />
<h3>@Html.DisplayNameFor(model => model.Name): @Html.DisplayFor(model => model.Name)</h3>

@if(@Model.JoinEntitiesStudentDepartments.Count == 0)
{
  <p>This department does currently have any students.</p>
}
else
{
  <h4>Students in the @Html.DisplayFor(model => model.Name) department:</h4>
  <ul>
  @foreach(StudentDepartment join in Model.JoinEntitiesStudentDepartments)
  {
    <li>@join.Student.Description</li>
  }
  </ul>
}

@if(@Model.JoinEntitiesCourseDepartments.Count == 0)
{
  <p>This department does currently have anyt courses.</p>
}
else
{
<br>
  <h4>Courses in the @Html.DisplayFor(model => model.Name) department:</h4>
  <ul>
  @foreach(CourseDepartment join in Model.JoinEntitiesCourseDepartments)
  {
    <li>@join.Course.Title</li>
  }
    <br>
    <p>Number of students who have not yet completed courses in this department: </p>
  </ul>


}
<br>
<br>
<br>


<p>@Html.ActionLink("Back to list", "Index")</p>
<p>@Html.ActionLink("Add a Student", "AddStudent", new { id = Model.DepartmentId })</p>
<p>@Html.ActionLink("Add a Course", "AddCourse", new { id = Model.DepartmentId })</p>
<p>@Html.ActionLink("Edit Department", "Edit", new { id = Model.DepartmentId })</p>
<p>@Html.ActionLink("Delete Department", "Delete", new { id = Model.DepartmentId })</p>